/*
* generated by Xtext
*/
package org.xtext.istic.mapUI.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.istic.mapUI.services.MapUIGrammarAccess;

public class MapUIParser extends AbstractContentAssistParser {
	
	@Inject
	private MapUIGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.istic.mapUI.ui.contentassist.antlr.internal.InternalMapUIParser createParser() {
		org.xtext.istic.mapUI.ui.contentassist.antlr.internal.InternalMapUIParser result = new org.xtext.istic.mapUI.ui.contentassist.antlr.internal.InternalMapUIParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getMappingAccess().getGroup(), "rule__Mapping__Group__0");
					put(grammarAccess.getMapUIAccess().getMappingsAssignment(), "rule__MapUI__MappingsAssignment");
					put(grammarAccess.getMappingAccess().getNameAssignment_1(), "rule__Mapping__NameAssignment_1");
					put(grammarAccess.getMappingAccess().getTypeAssignment_3(), "rule__Mapping__TypeAssignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.istic.mapUI.ui.contentassist.antlr.internal.InternalMapUIParser typedParser = (org.xtext.istic.mapUI.ui.contentassist.antlr.internal.InternalMapUIParser) parser;
			typedParser.entryRuleMapUI();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public MapUIGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(MapUIGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
